# Generated by Django 5.1.7 on 2025-06-27 09:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0013_aisummary'),
    ]

    operations = [
        migrations.CreateModel(
            name='DSAAIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text='The DSA question asked by the user')),
                ('response', models.TextField(help_text='AI generated response for the DSA question')),
                ('topic_tags', models.CharField(blank=True, help_text="Comma-separated tags like 'arrays,sorting,binary-search'", max_length=255)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('unknown', 'Unknown')], default='unknown', help_text='Difficulty level of the DSA problem discussed', max_length=10)),
                ('problem_source', models.CharField(blank=True, help_text='Source platform like LeetCode, HackerRank, etc.', max_length=100)),
                ('problem_id', models.CharField(blank=True, help_text='Problem number or identifier from the source', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_helpful', models.BooleanField(blank=True, help_text='User feedback on response helpfulness', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dsa_ai_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'DSA AI Response',
                'verbose_name_plural': 'DSA AI Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobSearchAIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text='The job search question asked by the user')),
                ('response', models.TextField(help_text='AI generated response for the job search question')),
                ('topic_tags', models.CharField(blank=True, help_text="Comma-separated tags like 'resume,interview,salary,networking,cover-letter'", max_length=255)),
                ('category', models.CharField(choices=[('resume', 'Resume/CV'), ('cover_letter', 'Cover Letter'), ('interview_prep', 'Interview Preparation'), ('job_search', 'Job Search Strategy'), ('salary_negotiation', 'Salary Negotiation'), ('networking', 'Networking'), ('career_advice', 'Career Advice'), ('portfolio', 'Portfolio/Projects'), ('linkedin', 'LinkedIn Profile'), ('application', 'Job Application'), ('other', 'Other')], default='other', help_text='Category of job search question', max_length=20)),
                ('experience_level', models.CharField(blank=True, choices=[('entry', 'Entry Level (0-2 years)'), ('mid', 'Mid Level (2-5 years)'), ('senior', 'Senior Level (5+ years)'), ('lead', 'Lead/Manager Level'), ('executive', 'Executive Level'), ('career_change', 'Career Change'), ('student', 'Student/Graduate')], help_text='Experience level context for the question', max_length=15)),
                ('target_role', models.CharField(blank=True, help_text='Target job role or field (e.g., Software Engineer, Product Manager, Data Scientist)', max_length=100)),
                ('interview_type', models.CharField(blank=True, choices=[('behavioral', 'Behavioral Interview'), ('technical', 'Technical Interview'), ('system_design', 'System Design Interview'), ('coding', 'Coding Interview'), ('case_study', 'Case Study'), ('phone_screen', 'Phone Screening'), ('final_round', 'Final Round'), ('other', 'Other')], help_text='Type of interview (if question is interview-related)', max_length=15)),
                ('company_size', models.CharField(blank=True, choices=[('startup', 'Startup (< 50 employees)'), ('small', 'Small Company (50-200 employees)'), ('medium', 'Medium Company (200-1000 employees)'), ('large', 'Large Company (1000+ employees)'), ('big_tech', 'Big Tech (FAANG/MAANG)'), ('any', 'Any Size')], help_text='Target company size context', max_length=10)),
                ('is_urgent', models.BooleanField(default=False, help_text='Whether this is an urgent job search question (e.g., interview tomorrow)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_helpful', models.BooleanField(blank=True, help_text='User feedback on response helpfulness', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_search_ai_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Search AI Response',
                'verbose_name_plural': 'Job Search AI Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SoftwareDevAIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text='The software development question asked by the user')),
                ('response', models.TextField(help_text='AI generated response for the software development question')),
                ('topic_tags', models.CharField(blank=True, help_text="Comma-separated tags like 'react,python,api,database,debugging'", max_length=255)),
                ('tech_stack', models.CharField(choices=[('frontend', 'Frontend'), ('backend', 'Backend'), ('fullstack', 'Full Stack'), ('mobile', 'Mobile'), ('devops', 'DevOps'), ('database', 'Database'), ('other', 'Other')], default='other', help_text='Technology stack category', max_length=20)),
                ('programming_language', models.CharField(blank=True, help_text='Primary programming language discussed (e.g., Python, JavaScript, Java)', max_length=50)),
                ('framework', models.CharField(blank=True, help_text='Framework or library discussed (e.g., React, Django, Express)', max_length=100)),
                ('question_type', models.CharField(choices=[('bug_fix', 'Bug Fix'), ('feature', 'Feature Implementation'), ('optimization', 'Performance Optimization'), ('best_practice', 'Best Practices'), ('architecture', 'Architecture Design'), ('learning', 'Learning/Tutorial'), ('other', 'Other')], default='other', help_text='Type of development question', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_helpful', models.BooleanField(blank=True, help_text='User feedback on response helpfulness', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='software_dev_ai_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Software Development AI Response',
                'verbose_name_plural': 'Software Development AI Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemDesignAIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text='The system design question asked by the user')),
                ('response', models.TextField(help_text='AI generated response for the system design question')),
                ('topic_tags', models.CharField(blank=True, help_text="Comma-separated tags like 'scalability,database,microservices,caching'", max_length=255)),
                ('system_scale', models.CharField(choices=[('small', 'Small Scale (< 1K users)'), ('medium', 'Medium Scale (1K - 100K users)'), ('large', 'Large Scale (100K - 1M users)'), ('massive', 'Massive Scale (> 1M users)'), ('unknown', 'Unknown Scale')], default='unknown', help_text='Expected scale of the system being designed', max_length=10)),
                ('system_type', models.CharField(choices=[('web_app', 'Web Application'), ('mobile_app', 'Mobile Application'), ('api', 'API/Service'), ('data_pipeline', 'Data Pipeline'), ('messaging', 'Messaging System'), ('social_media', 'Social Media Platform'), ('e_commerce', 'E-commerce Platform'), ('streaming', 'Streaming Service'), ('gaming', 'Gaming Platform'), ('iot', 'IoT System'), ('other', 'Other')], default='other', help_text='Type of system being designed', max_length=20)),
                ('focus_area', models.CharField(choices=[('architecture', 'High-Level Architecture'), ('database', 'Database Design'), ('scalability', 'Scalability Solutions'), ('performance', 'Performance Optimization'), ('availability', 'High Availability'), ('consistency', 'Data Consistency'), ('security', 'Security Design'), ('monitoring', 'Monitoring & Observability'), ('deployment', 'Deployment Strategy'), ('other', 'Other')], default='architecture', help_text='Primary focus area of the system design question', max_length=20)),
                ('is_interview_prep', models.BooleanField(default=False, help_text='Whether this question is for interview preparation')),
                ('company_context', models.CharField(blank=True, help_text="Company or context for the system design (e.g., 'Design Twitter', 'Design Netflix')", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_helpful', models.BooleanField(blank=True, help_text='User feedback on response helpfulness', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='system_design_ai_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Design AI Response',
                'verbose_name_plural': 'System Design AI Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.DeleteModel(
            name='AISummary',
        ),
        migrations.AddIndex(
            model_name='dsaairesponse',
            index=models.Index(fields=['user', '-created_at'], name='app_dsaaire_user_id_25753e_idx'),
        ),
        migrations.AddIndex(
            model_name='dsaairesponse',
            index=models.Index(fields=['difficulty'], name='app_dsaaire_difficu_2074d7_idx'),
        ),
        migrations.AddIndex(
            model_name='dsaairesponse',
            index=models.Index(fields=['problem_source'], name='app_dsaaire_problem_14811f_idx'),
        ),
        migrations.AddIndex(
            model_name='jobsearchairesponse',
            index=models.Index(fields=['user', '-created_at'], name='app_jobsear_user_id_a9b43a_idx'),
        ),
        migrations.AddIndex(
            model_name='jobsearchairesponse',
            index=models.Index(fields=['category'], name='app_jobsear_categor_841ffe_idx'),
        ),
        migrations.AddIndex(
            model_name='jobsearchairesponse',
            index=models.Index(fields=['experience_level'], name='app_jobsear_experie_9e2852_idx'),
        ),
        migrations.AddIndex(
            model_name='jobsearchairesponse',
            index=models.Index(fields=['interview_type'], name='app_jobsear_intervi_d3d900_idx'),
        ),
        migrations.AddIndex(
            model_name='jobsearchairesponse',
            index=models.Index(fields=['is_urgent'], name='app_jobsear_is_urge_dd482b_idx'),
        ),
        migrations.AddIndex(
            model_name='softwaredevairesponse',
            index=models.Index(fields=['user', '-created_at'], name='app_softwar_user_id_c3b067_idx'),
        ),
        migrations.AddIndex(
            model_name='softwaredevairesponse',
            index=models.Index(fields=['tech_stack'], name='app_softwar_tech_st_a0d2ee_idx'),
        ),
        migrations.AddIndex(
            model_name='softwaredevairesponse',
            index=models.Index(fields=['programming_language'], name='app_softwar_program_745e83_idx'),
        ),
        migrations.AddIndex(
            model_name='softwaredevairesponse',
            index=models.Index(fields=['question_type'], name='app_softwar_questio_2afb3b_idx'),
        ),
        migrations.AddIndex(
            model_name='systemdesignairesponse',
            index=models.Index(fields=['user', '-created_at'], name='app_systemd_user_id_be3cdf_idx'),
        ),
        migrations.AddIndex(
            model_name='systemdesignairesponse',
            index=models.Index(fields=['system_scale'], name='app_systemd_system__737861_idx'),
        ),
        migrations.AddIndex(
            model_name='systemdesignairesponse',
            index=models.Index(fields=['system_type'], name='app_systemd_system__724f05_idx'),
        ),
        migrations.AddIndex(
            model_name='systemdesignairesponse',
            index=models.Index(fields=['focus_area'], name='app_systemd_focus_a_311dca_idx'),
        ),
        migrations.AddIndex(
            model_name='systemdesignairesponse',
            index=models.Index(fields=['is_interview_prep'], name='app_systemd_is_inte_945a47_idx'),
        ),
    ]
